{"ast":null,"code":"var _jsxFileName = \"/Users/melaniemccord/Desktop/GitHub/chicago_crime/src/components/CustomCheckboxButton.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomCheckboxButton() {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const [radioValue, setRadioValue] = useState('1');\n  const radios = [{\n    name: 'Active',\n    value: '1'\n  }, {\n    name: 'Radio',\n    value: '2'\n  }, {\n    name: 'Radio',\n    value: '3'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: \"toggle-check\",\n        type: \"checkbox\",\n        variant: \"secondary\",\n        checked: checked,\n        value: \"1\",\n        onChange: e => setChecked(e.currentTarget.checked),\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-2\",\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: `radio-${idx}`,\n        type: \"radio\",\n        variant: \"secondary\",\n        name: \"radio\",\n        value: radio.value,\n        checked: radioValue === radio.value,\n        onChange: e => setRadioValue(e.currentTarget.value),\n        children: radio.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      className: \"mb-2\",\n      id: \"toggle-check\",\n      type: \"checkbox\",\n      variant: \"outline-primary\",\n      checked: checked,\n      value: \"1\",\n      onChange: e => setChecked(e.currentTarget.checked),\n      children: \"Checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: `radio-${idx}`,\n        type: \"radio\",\n        variant: idx % 2 ? 'outline-success' : 'outline-danger',\n        name: \"radio\",\n        value: radio.value,\n        checked: radioValue === radio.value,\n        onChange: e => setRadioValue(e.currentTarget.value),\n        children: radio.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CustomCheckboxButton, \"u8HBHezDv6+Ud4vmWbnEkotqWsM=\");\n_c = CustomCheckboxButton;\nexport default CustomCheckboxButton;\nvar _c;\n$RefreshReg$(_c, \"CustomCheckboxButton\");","map":{"version":3,"names":["useState","ButtonGroup","ToggleButton","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomCheckboxButton","_s","checked","setChecked","radioValue","setRadioValue","radios","name","value","children","className","id","type","variant","onChange","e","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","map","radio","idx","_c","$RefreshReg$"],"sources":["/Users/melaniemccord/Desktop/GitHub/chicago_crime/src/components/CustomCheckboxButton.js"],"sourcesContent":["import { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nfunction CustomCheckboxButton() {\n  const [checked, setChecked] = useState(false);\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'Active', value: '1' },\n    { name: 'Radio', value: '2' },\n    { name: 'Radio', value: '3' },\n  ];\n\n  return (\n    <>\n      <ButtonGroup className=\"mb-2\">\n        <ToggleButton\n          id=\"toggle-check\"\n          type=\"checkbox\"\n          variant=\"secondary\"\n          checked={checked}\n          value=\"1\"\n          onChange={(e) => setChecked(e.currentTarget.checked)}\n        >\n          Checked\n        </ToggleButton>\n      </ButtonGroup>\n      <br />\n      <ButtonGroup className=\"mb-2\">\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type=\"radio\"\n            variant=\"secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      <br />\n      <ToggleButton\n        className=\"mb-2\"\n        id=\"toggle-check\"\n        type=\"checkbox\"\n        variant=\"outline-primary\"\n        checked={checked}\n        value=\"1\"\n        onChange={(e) => setChecked(e.currentTarget.checked)}\n      >\n        Checked\n      </ToggleButton>\n      <br />\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type=\"radio\"\n            variant={idx % 2 ? 'outline-success' : 'outline-danger'}\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n    </>\n  );\n}\n\nexport default CustomCheckboxButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}