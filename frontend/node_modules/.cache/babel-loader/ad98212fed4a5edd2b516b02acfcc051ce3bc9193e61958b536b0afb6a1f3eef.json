{"ast":null,"code":"var _jsxFileName = \"/Users/melaniemccord/Desktop/GitHub/chicago_crime/src/App.js\";\nimport { createBrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/*\n* Eventually will load data from a database\n*\n* */\nimport Root from \"./routes/Root\";\nimport ExamplePage from \"./toy_examples/ExamplePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }, this),\n    children: [{\n      path: \"cat-test\",\n      element: /*#__PURE__*/_jsxDEV(ExamplePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 30\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","Root","ExamplePage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/melaniemccord/Desktop/GitHub/chicago_crime/src/App.js"],"sourcesContent":["import {\n    createBrowserRouter\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/*\n* Eventually will load data from a database\n*\n* */\nimport Root from \"./routes/Root\";\nimport ExamplePage from \"./toy_examples/ExamplePage\";\nconst App = () => {\n    const router = createBrowserRouter([\n        {\n            path: \"/\",\n            element: <Root />,\n            children: [\n                {\n                    path: \"cat-test\",\n                    element: <ExamplePage />,\n                },\n            ],\n        },\n    ]);\n    return (\n        <></>\n    );\n};\nexport default App;"],"mappings":";AAAA,SACIA,mBAAmB,QAChB,kBAAkB;AACzB,OAAO,sCAAsC;AAC7C;AACA;AACA;AACA;AACA,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACrD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,MAAMC,MAAM,GAAGR,mBAAmB,CAAC,CAC/B;IACIS,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEN,OAAA,CAACH,IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACjBC,QAAQ,EAAE,CACN;MACIN,IAAI,EAAE,UAAU;MAChBC,OAAO,eAAEN,OAAA,CAACF,WAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC3B,CAAC;EAET,CAAC,CACJ,CAAC;EACF,oBACIV,OAAA,CAAAE,SAAA,mBAAI,CAAC;AAEb,CAAC;AAACU,EAAA,GAhBIT,GAAG;AAiBT,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}